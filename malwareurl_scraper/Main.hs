module Main where

import Text.XML.HaXml.Parse
import Text.XML.HaXml.Types
import System.IO

main :: IO ()
main = do hf <- openFile "malwareurl.xml" ReadMode
          s <- hGetContents hf
          putStr $ printDoc $ (xmlParse "malwareurl.xml" s)
          hClose hf

printDoc :: Document i -> String
printDoc (Document _ _ root _) = printElement root
 
printElement :: Element i -> String
printElement (Elem name attrs content) = "\n" ++ name ++ ": " ++ (foldl (++) "" (map  printContent content))

printContent :: Content i -> String
printContent (CElem elem _) = (printElement elem) ++ ", "
printContent (CString _ str _) = str ++ ", "
printContent (CRef (RefEntity str) _) = str ++ ", "
printContent (CRef (RefChar n) _) = (show  n) ++ ", "
printContent (CMisc (Comment c) _) = c ++ ", "
printContent (CMisc (PI pi) _) = (show pi) ++ ", "